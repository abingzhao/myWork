From: <ÓÉ Windows Internet Explorer 7 ±£´æ>
Subject: 
Date: Sat, 22 Jan 2011 02:40:17 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01CBB9DD.B43A1F10"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.5994

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01CBB9DD.B43A1F10
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.mhhe.com/engcs/compsci/sahni/c1/E5.HTM

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dutf-8"><LINK=20
href=3D"http://www.mhhe.com/engcs/compsci/sahni/exer.css" =
rel=3Dstylesheet>
<META content=3D"MSHTML 6.00.6000.17093" name=3DGENERATOR></HEAD>
<BODY>
<H1>Data Structures, Algorithms, &amp; Applications in C++<BR>Chapter 1, =

Exercise 5<BR><BR></H1>We may represent a subset of <CODE =
class=3Dcode>n</CODE>=20
elements by the one-dimensional array <CODE class=3Dcode>x[1:n]</CODE>, =
where=20
<CODE class=3Dcode>x[j]</CODE> is one if element <CODE =
class=3Dcode>j</CODE> is=20
included in the subset and <CODE class=3Dcode>x[j]</CODE> is zero if =
element <CODE=20
class=3Dcode>j</CODE> is not included in the subset. <BR><BR>To output =
the subsets=20
recursively, we define a function <CODE class=3Dvar>Subsets(int =
i)</CODE> which=20
outputs all <CODE class=3Dcode>x[1:n]</CODE> with preset values for =
<CODE=20
class=3Dcode>x[1:i-1]</CODE> and <CODE class=3Dcode>x[i:n]</CODE> taking =
on all=20
possible 0 and 1 values. The invocation <CODE =
class=3Dcode>Subsets(1)</CODE> will=20
output all subsets. <BR><BR>The code is given below and in the files =
<CODE=20
class=3Dcode>rsubset.*</CODE>. The code assumes that <CODE =
class=3Dcode>n</CODE> and=20
<CODE class=3Dcode>x</CODE> are global variables.=20
<HR class=3Dcoderule>
<PRE class=3Dcode>
void Subsets(int i)

{// Output all subsets of x[1:n].

 // Only x[i:n] to be changed.

   if (i =3D=3D n) {// x[n] can be 0 or 1

                // output subset without element n

                x[n] =3D 0;

                for (int j =3D 1; j &lt;=3D n; j++)

                   cout &lt;&lt; x[j] &lt;&lt; " ";

                cout &lt;&lt; endl;

               =20

                // output subset with element n

                x[n] =3D 1;

                for (int j =3D 1; j &lt;=3D n; j++)

                   cout &lt;&lt; x[j] &lt;&lt; " ";

                cout &lt;&lt; endl;

                return;

                }

               =20

    // leave element i out

    x[i] =3D 0;

    // generate all subsets with i out

    Subsets(i+1);

               =20

    // put element i into subset

    x[i] =3D 1;

    // generate all subsets with i included

    Subsets(i+1);

}

<HR class=3Dcoderule>

</PRE><BR><BR>The above code may be modified if we are to ouptut element =

identifiers for the selected elements rather than 0/1 vectors.=20
</FONT></BODY></HTML>

------=_NextPart_000_0000_01CBB9DD.B43A1F10
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: 7bit
Content-Location: http://www.mhhe.com/engcs/compsci/sahni/exer.css

H1 {
	COLOR: red; align: center
}
H2 {
	COLOR: red; align: center
}
H3 {
	COLOR: red; align: center
}
H4 {
	COLOR: red; align: center
}
H5 {
	COLOR: red; align: center
}
H6 {
	COLOR: red; align: center
}
HR {
	COLOR: blue
}
BODY {
	BACKGROUND-COLOR: white
}
.code {
	COLOR: blue
}
.var {
	COLOR: blue
}
.def {
	COLOR: red
}
.figure {
	COLOR: red
}
.coderule {
	COLOR: blue
}

------=_NextPart_000_0000_01CBB9DD.B43A1F10--
