

<HTML>
<HEAD>
<LINK rel="stylesheet" href="../exer.css">
</HEAD>
<BODY>
<H1>
Data Structures, Algorithms, & Applications in Java<BR>
Chapter 5, Exercise 25<BR>
<BR>
</H1>
<dl compact>
<dt> (a)
<dd>
The merge can be done by examining the elements of the two input
lists <code class=code>a</code> and <code class=code>b</code> from
left to right.
The smaller element is copied into
the result list.
The method <code class=code>merge</code> is given below.  The variables
<code class=code>ca</code> and <code class=code>cb</code> act as cursors
that move through the lists
<code class=code>a</code> and <code class=code>b</code> from left to right.
<code class=code>ct</code> is a
cursor that keeps track of the location for the
next element of the result.
The code assumes that the list <code class=code>this</code> is different
from the lists <code class=code>a</code> and <code class=code>b</code>.
<HR class = coderule>
<PRE class = code>
/** make this the result of merging the sorted lists a and b */
public void merge(ArrayLinearListWithMerge a,
                  ArrayLinearListWithMerge b)
{
   int ca = 0;                       // cursor for a
   int cb = 0;                       // cursor for b
   int ct = 0;                       // cursor for this
   // get big enough array for result
   // if you opt to do this only when a.size + b.size > element.length,
   // be sure to set element[a.size + b.size : size] to null
   // to enable garbage collection
   element = new Object [a.size + b.size];

   // merge from a  and b
   while ((ca &lt; a.size) &amp;&amp; (cb &lt; b.size))
      if (((Comparable) a.element[ca]).compareTo(b.element[cb]) &lt;= 0)
         element[ct++] = a.element[ca++];
      else
         element[ct++] = b.element[cb++];

   // take care of left overs
   if (ca == a.size)                 // a is finished
      for (int q = cb; q &lt; b.size; q++)
         element[ct++] = b.element[q];
   else
      for (int q = ca; q &lt; a.size; q++)
         element[ct++] = a.element[q];
   size = ct;
}
</pre>
<HR class=coderule><BR>
<br>
<dt> (b)
<dd>
In each iteration of the <code class=code>while</code> loop the value
of <code class=code>ct</code> increases
by one.  On exiting this loop, <code class=code>ct</code> &lt;
<code class=code>a.size + b.size</code>.
The time spent in the <code class=code>for</code> loops is
either O(<code class=code>a.size</code>)
or O(<code class=code>b.size</code>).
So, the complexity is O(<code class=code>a.size + b.size</code>).
<br><br>
<dt> (c)
<dd>
The test program and output can be found in the files
<code class=code>ArrayLinearListWithMerge.*</code>.

</dl>
</FONT>
</BODY>
</HTML>
