
<HTML>
<HEAD>
<LINK rel="stylesheet" href="../exer.css">
</HEAD>
<BODY>
<H1>
Data Structures, Algorithms, & Applications in Java<BR>
Chapter 5, Exercise 9<BR>
<BR>
</H1>
The method <code class=code>dataStructures.ArrayLinearListWithRemoveRange.removeRange</code>
is given below.
<hr class=coderule>
<pre class=code>
/** remove the elements whose index is in the range
  * start through finish-1 */
public void removeRange(int start, int finish)
{
   // validate start and finish indexes
   if (start &lt; 0)
      start = 0;
   if (finish &gt; size)
      finish = size;
   if (start >= finish)
      // no elements to remove
      return;

   // move elements whose index is finish ... size-1 left
   int numberAtRightOfRange = size - finish;
   System.arraycopy(element, finish, element, start, numberAtRightOfRange);

   // set size and replace vacated slots with null
   int newSize = start + numberAtRightOfRange;
   while (size != newSize)
      element[--size] = null;   // enable garbage collection
}
</pre>
<hr class=coderule>
<br><br>
It takes
<code class=code>O(size - finish)</code> time to move the elements
at the right of the removed range to their new positions;
and it takes <code class=code>O(finish - start)</code> time to replace
the removed elements with <code class=code>null</code>.
So, the total time is
<code class=code>O(size - start)</code>.

</FONT>
</BODY>
</HTML>
