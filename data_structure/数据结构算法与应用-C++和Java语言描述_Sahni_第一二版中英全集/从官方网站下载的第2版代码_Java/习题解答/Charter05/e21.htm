
<HTML>
<HEAD>
<LINK rel="stylesheet" href="../exer.css">
</HEAD>
<BODY>
<H1>
Data Structures, Algorithms, & Applications in Java<BR>
Chapter 5, Exercise 21<BR>
<BR>
</H1>
<P ALIGN=LEFT>
<DL Compact>
<DT> (a)
<DD>
We scan the list from left to right skipping over elements that
are not to be saved.  Elements to be saved are moved to their
new positions as they are encountered.
The method <code class=code>dataStructures.ArrayLinearListWithHalf.half</code>
is given below.
</DL>
<BR>
</P>
<HR class = coderule>
<PRE class = code>
/** Save element[i], for i = 0, 2, 4, ...
  * Compact saved elements. */
public void half()
{
   for (int i = 2; i &lt; size; i += 2)
      element[i/2] = element[i];

   int newSize = (size + 1) / 2;
   for (int i = newSize; i &lt; size; i++)
      element[i] = null;   // enable garbage collection

   size = newSize;
}
</pre>
<HR><BR><br>
<DL Compact>
<DT> (b)
<DD>
Each <code class = code>for</code> loop iterates
<code class = code>size/2</code> times, and
each iteration takes <code class=var>Theta(1)</code> time.  The remaining lines
take <code class=var>Theta(1)</code> time.  So the overall complexity is
<code class = code>Theta(size)</code>.
</DL>


</FONT>
</BODY>
</HTML>
