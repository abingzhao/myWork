
<HTML>
<HEAD>
<LINK rel="stylesheet" href="../exer.css">
</HEAD>
<BODY>
<H1>
Data Structures, Algorithms, & Applications in Java<BR>
Chapter 13, Exercise 21<BR>
<BR>
</H1>


The code for
<code class=var>MinHblt</code>
can be obtained from that for
<code class=var>MaxHblt</code>
by making a single change in the private method
<code class=var>meld</code>.
The new method is given below.  The changed line
is shown in <font color=red>red</font>.
Of course, we must also change the names of the methods
<code class=code>removeMax</code> and <code class=code>getMax</code>
to 
<code class=code>removeMin</code> and <code class=code>getMin</code>.
<br><br>
The code for the complete class
<code class=code>MinHblt</code>, a sample test program, and output
are given
in the files <code class=var>MinHblt.*</code>


<HR class = coderule>
<pre class = code>
static HbltNode meld(HbltNode x, HbltNode y)
{
   if (y == null)
      return x;   // y is empty
   if (x == null)
      return y;   // x is empty

   // neither is empty, swap x and y if necessary
   <font color=red>if (x.element.compareTo(y.element) > 0)</font>
   {// swap x and y
      HbltNode t = x;
      x = y;
      y = t;
   }
   // now x.element &lt;= y.element

   x.rightChild = meld(x.rightChild, y);

   // swap subtrees of x if necessary and set x.s
   if (x.leftChild == null)
   {// left subtree is empty, swap the subtrees
       x.leftChild = x.rightChild;
       x.rightChild = null;
       x.s = 1;
    }
   else
   {  // swap only if left subtree has smaller s value
      if (x.leftChild.s &lt; x.rightChild.s)
      {// swap subtrees
          HbltNode t = x.leftChild;
          x.leftChild = x.rightChild;  
          x.rightChild = t;
      }
      // update s value
      x.s = x.rightChild.s + 1;
   }
   return x;
}
<hr class=coderule>
</pre>
<br><br>


</FONT>
</BODY>
</HTML>
