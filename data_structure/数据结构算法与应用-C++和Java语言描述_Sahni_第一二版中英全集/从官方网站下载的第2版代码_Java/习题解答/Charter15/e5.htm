
<HTML>
<HEAD>
<LINK rel="stylesheet" href="../exer.css">
</HEAD>
<BODY>
<H1>
Data Structures, Algorithms, & Applications in Java<BR>
Chapter 15, Exercise 5<BR>
<BR>
</H1>


<HR class = coderule>
<pre class = code>
<strong class=var>AbstractDataType</strong> <em cass=var>DIndexedBSTree</em>
{
   <strong class=var>instances</em>
      same as for <code class=code>IndexedBSTree</code> except that the keys need not be distinct
   <strong class=var>operations</em>
      <em cass=var>get(k):</em> return any element with key <em class=var>k</em>
      <em cass=var>get(index):</em> return the <em class=var>index</em>th element
      <em cass=var>put(k,x):</em> put element <em class=var>x</em> with key <em class=var>k</em> into the search tree
      <em cass=var>remove(k):</em> remove any element with key <em class=var>k</em> and return it
      <em cass=var>remove(index):</em> remove the <em class=var>index</em>th element and return it
      <em cass=var>ascend():</em> output all elements in nondecreasing order of key
}
<hr class=coderule>
</pre>

<br><br>
We may use either the interface <code class=code>IndexedBSTree</code>
or define a new interface that extends
<code class=code>IndexedBSTree</code>, but contains no new methods.
The new interface is given below.
<HR class = coderule>
<PRE class = code>
public interface DIndexedBSTree extends IndexedBSTree
   {}
</pre>
<HR class=coderule><BR><br>
</FONT>
</BODY>
</HTML>
