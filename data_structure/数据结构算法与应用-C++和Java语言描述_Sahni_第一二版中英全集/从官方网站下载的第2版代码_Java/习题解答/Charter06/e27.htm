
<HTML>
<HEAD>
<LINK rel="stylesheet" href="../exer.css">
</HEAD>
<BODY>
<H1>
Data Structures, Algorithms, & Applications in Java<BR>
Chapter 6, Exercise 27<BR>
<BR>
</H1>
<dl compact>
<dt>(a)
<dd>
The nonmember method to reverse a circular list is given below.
<HR class = coderule>
<PRE class = code>
public class ReverseCircularList
{
   public static void reverse(CircularList x)
   {
      int sizeMinus1 = x.size() - 1;
      for (int i = 0; i &lt; sizeMinus1; i++)
      {
         // retrieve and remove first element
         Object y = x.remove(0);

         // insert at proper place
         x.add(sizeMinus1 - i, y);
      }
   }
}
</pre>
<HR class=coderule><BR><br>
<br><br>
<dt> (b)
<dd>
Each invocation of <code class=code>remove</code> takes
<code class=code>O(1)</code> time, and each invocation
<code class=code>add(sizeMinus1 - i, y)</code> takes
<code class=code>O(sizeMinus1 - i)</code> time.
Therefore, each iteration
of the
<code class=code>for</code> loop takes
<code class=code>O(sizeMinus1 - i)</code> time.
The overall complexity is
<code class=code>O( (sum from i = 0 to sizeMinus1 - 1) (sizeMinus1 - i) =
O(size<sup>2</sup>)</code>.

<br><br>
<dt> (c)
<dd>
The test program and output appear in the files
<code class=code>ReverseCircularList.*</code>.
</FONT>
</BODY>
</HTML>
