

<HTML>
<HEAD>
<LINK rel="stylesheet" href="../exer.css">
</HEAD>
<BODY>
<H1>
Data Structures, Algorithms, & Applications in Java<BR>
Chapter 6, Exercise 19<BR>
<BR>
</H1>
<DL Compact>
<DT> (a)
<DD>
A circular shift by <code class=var>i</code>, <code class=var>0 &lt; i &lt; size</code>
can be done by moving the first <code class=var>i</code> elements from the
front of the chain to the end. The code is given below.
</dl>
<HR class = coderule>
<PRE class = code>
public class ExtendedChainWithCircularShift extends ExtendedChain
{
   /** shift the elements clockwise circularly by shiftAmount
     * throws IllegalArgumentException when
     * shiftAmount &lt; 0 */
   private void circularShift(int shiftAmount)
   {
      // empty list is easily shifted by any amount
      if (size == 0)
         return;

      // validate shiftAmount
      if (shiftAmount &lt; 0)
         throw new IllegalArgumentException
                   ("shift amount must be >= 0, it is " + shiftAmount);

      // get equivalent amount in the range 0 though size - 1
      shiftAmount %= size;
  
      // expedite zero shift, makes rest of code easier
      if (shiftAmount == 0)
         return;

      // find last node to be moved to right end
      ChainNode lastNodeToMove = firstNode;
      for (int i = 1; i &lt; shiftAmount; i++)
         lastNodeToMove = lastNodeToMove.next;

      // move nodes from front to rear
      lastNode.next = firstNode;
      firstNode = lastNodeToMove.next;
      lastNode = lastNodeToMove;
      lastNode.next = null;
   }
}
</pre>
<HR class=coderule><BR><br>
<br><br>
<dl compact>
<dt> (b)
<dd>
The test program and output are in the files <code class=code>ExtendedChainWithCircularShift.*</code>.
</dl>

</FONT>
</BODY>
</HTML>
