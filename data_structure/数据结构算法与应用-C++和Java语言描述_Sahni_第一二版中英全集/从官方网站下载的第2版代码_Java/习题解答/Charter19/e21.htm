
<HTML>
<HEAD>
<LINK rel="stylesheet" href="../exer.css">
</HEAD>
<BODY>
<H1>
Data Structures, Algorithms, & Applications in Java<BR>
Chapter 19, Exercise 21<BR>
<BR>
</H1>

The modified quick sort code is given below. Changes from the original
code are shown in <font color=red>red</code>

<HR class = coderule>
<pre class = code>
public class <font color=red>Modified</font>QuickSort
{
   // data member
   static Comparable [] a;   // array of elements to be sorted

   /** sort the elements a[0 : a.length - 1] using the quick sort method */
   public static void quickSort(Comparable [] a)
   {
      <font color=red>Modified</font>QuickSort.a = a;
      if (a.length &lt;= 1) return;
      // move largest element to right end
      MyMath.swap(a, a.length - 1, MyMath.max(a, a.length - 1));
      quickSort(0, a.length - 2);
   }
   
   /** sort a[l:r], a[r+1] &gt;= a[l:r] */
   private static void quickSort(int l, int r)
   {
      <font color=red>while (leftEnd &lt; rightEnd)
      {// at least 2 elements to sort</font>
         int leftCursor = leftEnd,        // left-to-right cursor
             rightCursor = rightEnd + 1;  // right-to-left cursor
         Comparable pivot = a[leftEnd];
      
         // swap elements >= pivot on left side
         // with elements <= pivot on right side
         while (true)
         {
            do
            {// find >= element on left side
               leftCursor++;
            } while (a[leftCursor].compareTo(pivot) &lt; 0);
   
            do
            {// find <= element on right side
               rightCursor--;
            } while (a[rightCursor].compareTo(pivot) &gt; 0);
   
            if (leftCursor >= rightCursor) break;  // swap pair not found
            MyMath.swap(a, leftCursor, rightCursor);
         }
      
         // place pivot
         a[leftEnd] = a[rightCursor];
         a[rightCursor] = pivot;
      
         quickSort(leftEnd, rightCursor - 1);   // sort left segment
         <font color=red>leftEnd = rightCursor + 1;             // set to sort right segment
      }</font>
   }
}
<hr class=coderule>
</pre>

The modified code is expected to run slightly faster than Program 19.6
because the overhead of a <code class=code>while</code>
is less than that of a method call for most compilers.

</FONT>
</BODY>
</HTML>
