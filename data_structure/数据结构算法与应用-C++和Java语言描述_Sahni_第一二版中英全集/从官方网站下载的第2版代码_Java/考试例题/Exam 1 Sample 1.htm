<HTML>
<HEAD>
<LINK rel="stylesheet" href="../exer.css">
</HEAD>
<BODY>
<H1>Data Structures & Algorithms</H1>

<H2>Exam 1</H2>
<H2>Sample 1, 75 Minutes</H2>
<BR>
</H1>
<ol>
<li>
In the class <code class=code>ArrayLinearList</code>
a linear list is represented in a one-dimensional array
<code class=code>element</code>. The data member <code class=code>size</code>
is such that the list elements are in positions <code class=code>0</code>
through <code class=code>size-1</code> of the array.

The member method <code class=var>rightShift</code> shifts the
elements of the linear list right by <code class=var>k</code>
positions and fills the empty positions at the left end
with <code class=code>null</code>.
For example, if the list <code class=var>element</code>[0:5]</code>
= [1, 2, 3, 4, 5, 6], whose size is 6, is shifted right by 3, the result is
[0, 0, 0, 1, 2, 3, 4, 5, 6], whose size is 9.
<dl compact>
<dt>(a)
<dd>
[8] Write Java code for the <code class=var>rightShift</code>
member method.
<dt>(b)
[2] What is the time complexity of your code as a function
of the list size?
</dl>
<br><br><br>
<li>
Consider the class <code class=var>Chain</code> which has the
data members <code class=code>firstNode</code> and <code class=code>size</code>.
The data type of
<code class=code>firstNode</code> is <code class=code>ChainNode</code>.
Objects of type <code class=code>ChainNode</code> have the data members
<code class=code>element</code> and <code class=code>next</code>.
Nodes on a chain are linked together using the field <code class=code>next</code>.
<br><br>
The method <code class=var>isSorted</code>, which is a member
of <code class=code>Chain</code> determines whether
the chain elements are in ascending (more accurately nondecreasing)
order of their <code class=var>element</code> values.
The method returns <code class=var>true</code>
if the chain is sorted and <code class=var>false</code>
if it is not.
<dl compact>
<dt>(a)
<dd>
[8] Write Java code for the <code class=var>isSorted</code>
member method.
To compare two objects <code class=var>a</code> and
<code class=var>b</code> you may do something like
<pre>
<code class=var>
if (((Comparable) a).compareTo(b) > 0)
{// come here only if a greater than b
}
</code></pre>
<dt>(b)
[2] What is the time complexity of your code as a function
of the list length?
</dl>
<br><br>

<li>
In an <em class=var>n</em> x <em class=var>n</em> <strong>N-matrix</strong>,
all terms other than those
in column 1, column <em class=var>n</em>, and the main diagonal
are zero.  An N-matrix has at most
3<em class=var>n</em>-2 nonzero terms.
An N-matrix can be compactly stored in a one-dimensional array
by first storing column 1, then column <em class=var>n</em>,
and then the remaining
elements of the main diagonal.
<br>
<pre class=figure>
                              x             x 
                              x x           x
                              x   x   zero  x
                              x     x       x
                              x       x     x
                              x  zero   x   x
                              x           x x
                              x             x
<br>
                         x denotes a possible nonzero
                         all other terms are zero
</pre>
</p>
<br>
<dl compact>
<dt> (a)
<dd>
[2] Give a sample 4 x 4 N-matrix and its compact representation.
<dt> (b)
<dd>
[8] Suppose that we are defining a class <code class=var>NMatrix</code>
that represents an <em class=var>n</em> x <em class=var>n</em>
N-matrix in a one-dimensional array <code class=var>element</code> as above.
Besides <code class=code>element</code>, the class has the data
members <code class=code>n</code> and <code class=code>zero</code> (the
zero element for the matrix).

Write Java code for the member method <code class=var>set(i, j, newValue)</code> which
stores <code class=var>newValue</code> as the <code class=var>(i,j)</code>
element
of the N-matrix, 1 <= <code class=var>i</code> <= <code class=var>n</code>
and
1 <= <code class=var>j</code> <= <code class=var>n</code>.
The element is to be stored in the proper position of the one-dimensional
array <code class=var>element</code>.

</dl>
</ol>


<center>
<A href="s1.htm">Solutions</A>

</html>
